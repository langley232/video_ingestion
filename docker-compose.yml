version: "3.8"

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network
    volumes:
      - minio_data:/data

  redpanda:
    image: redpandadata/redpanda:latest
    container_name: redpanda
    command:
      - redpanda
      - start
      - --smp
      - "1"
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - "0"
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://redpanda:9092
      - --crash-reports-dir
      - "/tmp/crash_reports"
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - ./redpanda/data:/var/lib/redpanda/data
      - /tmp/crash_reports:/tmp/crash_reports
    user: "1000:1000"
    environment:
      - REDPANDA_RPC_SERVER_LISTEN_ADDRESS=0.0.0.0
    networks:
      - app-network

  redpanda-console:
    image: redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: "redpanda:9092"
    depends_on:
      redpanda:
        condition: service_healthy
    networks:
      - app-network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./ollama/entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    environment:
      - OLLAMA_MODELS=nomic-embed-text:latest,moondream:1.8b,granite3.2-vision:2b,orca-mini:3b,gemma3:4b
    healthcheck:
      disable: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    pull_policy: always
    tty: true
    restart: unless-stopped
    networks:
      - app-network

  ingestion:
    build:
      context: ./ingestion
      dockerfile: Dockerfile
    container_name: ingestion
    ports:
      - "8000:8000"
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
    depends_on:
      redpanda:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  storage:
    build:
      context: ./storage
      dockerfile: Dockerfile
    container_name: storage
    ports:
      - "8001:8001"
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - FAISS_INDEX_PATH=/app/faiss/video_index.faiss
      - OLLAMA_ENDPOINT=http://ollama:11434
    volumes:
      - faiss_data:/app/faiss
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    networks:
      - app-network

  query_alert:
    build:
      context: ./query_alert
      dockerfile: Dockerfile
    container_name: query_alert
    ports:
      - "8001:8000"
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - AUDIO_BACKEND_ENDPOINT=http://audio_backend:8000
      - OLLAMA_ENDPOINT=http://ollama:11434
    depends_on:
      redpanda:
        condition: service_healthy
      minio:
        condition: service_healthy
      ingestion:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  streamlit_app:
    build:
      context: ./streamlit
      dockerfile: Dockerfile
    container_name: streamlit_app
    ports:
      - "8501:8501"
    environment:
      - INGESTION_ENDPOINT=http://ingestion:8000
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      ingestion:
        condition: service_healthy
      query_alert:
        condition: service_healthy
    networks:
      - app-network

  audio_backend:
    build:
      context: ./audio_api/backend
      dockerfile: Dockerfile
    container_name: audio_backend
    ports:
      - "8002:8000"
    environment:
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  minio_data:
  ollama_data:
  faiss_data:
